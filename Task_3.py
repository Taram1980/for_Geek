# 1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
# Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.

# def func(x, y):
#     if float(y) == 0:
#         print('Error')
#     else:
#         z = float(x)/float(y)
#         return z
#
# def my_func():
#     x, y = (input('Enter 2 numbers: ').split())
#     return func(x, y)
#
# dd = my_func()
# print(dd)

# 2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя: имя, фамилия, год рождения, город проживания, email, телефон.
# Функция должна принимать параметры как именованные аргументы. Реализовать вывод данных о пользователе одной строкой

# def func(**kwargs):
#     return (kwargs)
#
#
# def my_func():
#     print(func(name = input('Name: '),
#               lastname = input('Lastname: '),
#               birth_date = input('Birth_date: '),
#               home_city = input('Home_city: '),
#               email = input('Email: '),
#               phone = input('Phone: ')
#
#               ))
#
# my_func()


# 3. Реализовать функцию my_func(), которая принимает три позиционных аргумента, и возвращает сумму наибольших двух аргументов.

# def my_func(x, y, z):
#     return x + y + z - min(x, y, z)
#
# print(my_func(1,2,3))

# 4. Программа принимает действительное положительное число x и целое отрицательное число y. Необходимо выполнить возведение числа x в степень y.
# Задание необходимо реализовать в виде функции my_func(x, y). При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
# Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **.
# Второй — более сложная реализация без оператора **, предусматривающая использование цикла.

#1
# def my_func(x, y):
#     return 1/x ** abs(y)

#2
# def my_func(x, y):
#     init = x
#     for i in range(-y-1):
#         # print(i)
#         x = x*init
#     print(1/x)
#     return (1/x)

# my_func(2, -1)

# 5. Программа запрашивает у пользователя строку чисел, разделенных пробелом. При нажатии Enter должна выводиться сумма чисел.
# Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter. Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме.
# Но если вместо числа вводится специальный символ, выполнение программы завершается.
# Если специальный символ введен после нескольких чисел, то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.

# def my_func():
#     z = 0
#     x = input('Enter: ').split()
#     for i in range(len(x)):
#         if x[i] != '*':
#             z = z + int(x[i])
#         else:
#             break
#
#     print(z)
#     return (z)
#
# my_func()

# 6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же, но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
# Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом.
# Каждое слово состоит из латинских букв в нижнем регистре. Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы.
# Необходимо использовать написанную ранее функцию int_func().

# a = input('Enter: ')

def int_func(a):
    return str.upper(a[0]) + a[1:]
# print(int_func())

def my_func():
    new_ = str('')
    z = list(input('Enter: ').split())
    for i in range(len(z)):
        new_ = new_ + ' ' + int_func(z[i])

    return new_

print(my_func())



# def my_func():
#     new_ = []
#     z = list(input('Enter: ').split())
#     for i in range(len(z)):
#         new_.append(int_func(z[i]))
#     new_ = (' '.join(new_))
#     return new_
# print(my_func())